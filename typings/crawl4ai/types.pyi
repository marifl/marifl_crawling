"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING, Union
from .async_logger import AsyncLogger as AsyncLoggerType, AsyncLoggerBase as AsyncLoggerBaseType
from .async_webcrawler import AsyncWebCrawler as AsyncWebCrawlerType, CacheMode as CacheModeType
from .models import CrawlResult as CrawlResultType, MarkdownGenerationResult as MarkdownGenerationResultType
from .hub import CrawlerHub as CrawlerHubType
from .browser_profiler import BrowserProfiler as BrowserProfilerType
from .async_configs import BrowserConfig as BrowserConfigType, CrawlerRunConfig as CrawlerRunConfigType, HTTPCrawlerConfig as HTTPCrawlerConfigType, LLMConfig as LLMConfigType
from .content_scraping_strategy import ContentScrapingStrategy as ContentScrapingStrategyType, LXMLWebScrapingStrategy as LXMLWebScrapingStrategyType, WebScrapingStrategy as WebScrapingStrategyType
from .proxy_strategy import ProxyRotationStrategy as ProxyRotationStrategyType, RoundRobinProxyStrategy as RoundRobinProxyStrategyType
from .extraction_strategy import CosineStrategy as CosineStrategyType, ExtractionStrategy as ExtractionStrategyType, JsonCssExtractionStrategy as JsonCssExtractionStrategyType, JsonXPathExtractionStrategy as JsonXPathExtractionStrategyType, LLMExtractionStrategy as LLMExtractionStrategyType
from .chunking_strategy import ChunkingStrategy as ChunkingStrategyType, RegexChunking as RegexChunkingType
from .markdown_generation_strategy import DefaultMarkdownGenerator as DefaultMarkdownGeneratorType
from .content_filter_strategy import BM25ContentFilter as BM25ContentFilterType, LLMContentFilter as LLMContentFilterType, PruningContentFilter as PruningContentFilterType, RelevantContentFilter as RelevantContentFilterType
from .async_dispatcher import BaseDispatcher as BaseDispatcherType, CrawlerMonitor as CrawlerMonitorType, DisplayMode as DisplayModeType, MemoryAdaptiveDispatcher as MemoryAdaptiveDispatcherType, RateLimiter as RateLimiterType, RunManyReturn as RunManyReturnType, SemaphoreDispatcher as SemaphoreDispatcherType
from .docker_client import Crawl4aiDockerClient as Crawl4aiDockerClientType
from .deep_crawling import BFSDeepCrawlStrategy as BFSDeepCrawlStrategyType, BestFirstCrawlingStrategy as BestFirstCrawlingStrategyType, CompositeScorer as CompositeScorerType, ContentTypeFilter as ContentTypeFilterType, DFSDeepCrawlStrategy as DFSDeepCrawlStrategyType, DeepCrawlDecorator as DeepCrawlDecoratorType, DeepCrawlStrategy as DeepCrawlStrategyType, DomainAuthorityScorer as DomainAuthorityScorerType, DomainFilter as DomainFilterType, FilterChain as FilterChainType, FilterStats as FilterStatsType, FreshnessScorer as FreshnessScorerType, KeywordRelevanceScorer as KeywordRelevanceScorerType, PathDepthScorer as PathDepthScorerType, SEOFilter as SEOFilterType, URLFilter as URLFilterType, URLScorer as URLScorerType

AsyncLoggerBase = Union['AsyncLoggerBaseType']
AsyncLogger = Union['AsyncLoggerType']
AsyncWebCrawler = Union['AsyncWebCrawlerType']
CacheMode = Union['CacheModeType']
CrawlResult = Union['CrawlResultType']
CrawlerHub = Union['CrawlerHubType']
BrowserProfiler = Union['BrowserProfilerType']
BrowserConfig = Union['BrowserConfigType']
CrawlerRunConfig = Union['CrawlerRunConfigType']
HTTPCrawlerConfig = Union['HTTPCrawlerConfigType']
LLMConfig = Union['LLMConfigType']
ContentScrapingStrategy = Union['ContentScrapingStrategyType']
WebScrapingStrategy = Union['WebScrapingStrategyType']
LXMLWebScrapingStrategy = Union['LXMLWebScrapingStrategyType']
ProxyRotationStrategy = Union['ProxyRotationStrategyType']
RoundRobinProxyStrategy = Union['RoundRobinProxyStrategyType']
ExtractionStrategy = Union['ExtractionStrategyType']
LLMExtractionStrategy = Union['LLMExtractionStrategyType']
CosineStrategy = Union['CosineStrategyType']
JsonCssExtractionStrategy = Union['JsonCssExtractionStrategyType']
JsonXPathExtractionStrategy = Union['JsonXPathExtractionStrategyType']
ChunkingStrategy = Union['ChunkingStrategyType']
RegexChunking = Union['RegexChunkingType']
DefaultMarkdownGenerator = Union['DefaultMarkdownGeneratorType']
MarkdownGenerationResult = Union['MarkdownGenerationResultType']
RelevantContentFilter = Union['RelevantContentFilterType']
PruningContentFilter = Union['PruningContentFilterType']
BM25ContentFilter = Union['BM25ContentFilterType']
LLMContentFilter = Union['LLMContentFilterType']
BaseDispatcher = Union['BaseDispatcherType']
MemoryAdaptiveDispatcher = Union['MemoryAdaptiveDispatcherType']
SemaphoreDispatcher = Union['SemaphoreDispatcherType']
RateLimiter = Union['RateLimiterType']
CrawlerMonitor = Union['CrawlerMonitorType']
DisplayMode = Union['DisplayModeType']
RunManyReturn = Union['RunManyReturnType']
Crawl4aiDockerClient = Union['Crawl4aiDockerClientType']
DeepCrawlStrategy = Union['DeepCrawlStrategyType']
BFSDeepCrawlStrategy = Union['BFSDeepCrawlStrategyType']
FilterChain = Union['FilterChainType']
ContentTypeFilter = Union['ContentTypeFilterType']
DomainFilter = Union['DomainFilterType']
URLFilter = Union['URLFilterType']
FilterStats = Union['FilterStatsType']
SEOFilter = Union['SEOFilterType']
KeywordRelevanceScorer = Union['KeywordRelevanceScorerType']
URLScorer = Union['URLScorerType']
CompositeScorer = Union['CompositeScorerType']
DomainAuthorityScorer = Union['DomainAuthorityScorerType']
FreshnessScorer = Union['FreshnessScorerType']
PathDepthScorer = Union['PathDepthScorerType']
BestFirstCrawlingStrategy = Union['BestFirstCrawlingStrategyType']
DFSDeepCrawlStrategy = Union['DFSDeepCrawlStrategyType']
DeepCrawlDecorator = Union['DeepCrawlDecoratorType']
if TYPE_CHECKING:
    ...
def create_llm_config(*args, **kwargs) -> LLMConfigType:
    ...

